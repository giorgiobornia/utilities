From: <Salvato con Microsoft Internet Explorer 5>
Subject: Esercitazioni
Date: Tue, 22 Jun 2004 03:18:11 +0200
MIME-Version: 1.0
Content-Type: multipart/related;
	boundary="----=_NextPart_000_0055_01C45807.8C850640";
	type="text/html"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409

This is a multi-part message in MIME format.

------=_NextPart_000_0055_01C45807.8C850640
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://xoomer.virgilio.it/roberto-ricci/C/Es9.htm

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Esercitazioni</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1252"><LINK=20
href=3D"http://xoomer.virgilio.it/roberto-ricci/stilind.css" =
type=3Dtext/css=20
rel=3Dstylesheet>
<META content=3D"MSHTML 6.00.2800.1400" name=3DGENERATOR></HEAD>
<BODY>
<CENTER>
<H1 style=3D"BACKGROUND: teal; COLOR: white">ESERCITAZIONI: linguaggio=20
C</H1></CENTER>
<HR style=3D"COLOR: blue">

<CENTER><FONT face=3DArial size=3D1>pagine di <A=20
href=3D"mailto:roberto_ricci@tin.it"><I>Roberto Ricci </I></A>L.S. =
"<I>A.=20
Righi</I>", Bologna. Ultima revisione
<SCRIPT language=3DJavaScript>=0A=
<!--=0A=
=0A=
function SymError()=0A=
{=0A=
  return true;=0A=
}=0A=
=0A=
window.onerror =3D SymError;=0A=
=0A=
var SymRealWinOpen =3D window.open;=0A=
=0A=
function SymWinOpen(url, name, attributes)=0A=
{=0A=
  return (new Object());=0A=
}=0A=
=0A=
window.open =3D SymWinOpen;=0A=
=0A=
//-->=0A=
</SCRIPT>

<SCRIPT language=3DJavascript>
document.write(document.lastModified)
</SCRIPT>
 </FONT></CENTER>
<HR style=3D"COLOR: blue">

<UL>
  <LI><A=20
  =
href=3D"http://xoomer.virgilio.it/roberto-ricci/C/Es0.htm#indice">INDICE<=
/A>=20
  <LI>
  <OL>
    <LI><A =
href=3D"http://xoomer.virgilio.it/roberto-ricci/C/Es9.htm#parte0">Per=20
    iniziare</A>=20
    <LI><A=20
    =
href=3D"http://xoomer.virgilio.it/roberto-ricci/C/Es9.htm#parte1">Variabi=
li=20
    puntatore</A>=20
    <LI><A=20
    =
href=3D"http://xoomer.virgilio.it/roberto-ricci/C/Es9.htm#parte2">Aritmet=
ica=20
    dei puntatori </A>
    <LI><A =
href=3D"http://xoomer.virgilio.it/roberto-ricci/C/Es9.htm#parte3">Array=20
    e puntatori</A> </LI></OL>
  <LI><A =
href=3D"http://xoomer.virgilio.it/roberto-ricci/C/Es9.zip">Soluzioni=20
  proposte agli esercizi</A> </LI></UL><BR>&nbsp; <BR>&nbsp; <BR>&nbsp;=20
<H3 style=3D"BACKGROUND: teal; COLOR: white"><A name=3Dparte0></A>Per=20
iniziare</H3><BR>&nbsp;=20
<OL>
  <LI>Creare sul floppy <TT>A:</TT> con [Tasto Destro]<FONT =
face=3D"Courier New"=20
  size=3D+1><U>N</U>uovo/<U>C</U>artella</FONT> una cartella dal nome=20
  <TT>lab9</TT>=20
  <LI>Salvare il corrente file in <TT>A:</TT> con il nome <TT>A:Es9</TT> =

  <LI>Usare <FONT face=3D"Courier New" size=3D+1>Riduci a icona</FONT> =
per mettere=20
  da parte la finestra sul floppy senza chiuderla=20
  <LI>Aprire il file <TT>A:Es9.htm</TT> per leggere e seguire il resto=20
  dell'esercitazione=20
  <LI>Ridurre le dimensioni della finestra su <TT>A:</TT> che deve =
restare=20
  visibile ma consentire la visibilit=E0 di un'altra nuova finestra=20
</LI></OL><BR>&nbsp; <BR>&nbsp;=20
<H3 style=3D"BACKGROUND: teal; COLOR: white"><A =
name=3Dparte1></A>Variabili=20
puntatore</H3><BR>&nbsp; Un puntatore =E8 una variabile il cui contenuto =
=E8 un=20
numero intero che rappresenta l'indirizzo di un'altra variabie del tipo=20
dichiarato. In gergo si dice che la prima variabile punta alla seconda. =
La forma=20
della dichiarazione di una variabile puntatore =E8: <PRE =
style=3D"BACKGROUND: yellow"><I>&lt;tipo dela variabile puntata&gt;</I> =
<FONT face=3DSymbol color=3Dred size=3D+1>*</FONT><I>&lt;nome della =
variabile puntatore&gt;</I><FONT face=3DSymbol color=3Dred =
size=3D+1>;</FONT>
</PRE>I due operatori '*' di <I>referenziazione'</I> e'&amp;' di=20
<I>dereferenziazione'</I> possono essere visti come complementari.=20
<BR>Quest'ultimo, applicato a qualunque variabile, permette di riferirsi =

all'indirizzo del primo elemento di cui la variabile si compone.=20
<OL>
  <OL>
    <LI>Redigere e compilare un programma con le seguenti istruzioni: =
<PRE style=3D"BACKGROUND: silver">#include &lt;stdio.h&gt;

main(){
  int n;
  int *p;
  printf(" &amp;p=3D%lX,  p=3D%lX,  *p=3D%d, \n n=3D%d,  =
&amp;n=3D%lX,",&amp;p,p,*p,n,&amp;n);
  n=3D100;
  printf("\n\n &amp;p=3D%lX,  p=3D%lX,  *p=3D%d, \n n=3D%d,  =
&amp;n=3D%lX,",&amp;p,p,*p,n,&amp;n);
  p=3D&amp;n;
  printf("\n\n &amp;p=3D%lX,  p=3D%lX,  *p=3D%d, \n n=3D%d,  =
&amp;n=3D%lX,",&amp;p,p,*p,n,&amp;n);
  *p=3D200;
  printf("\n\n &amp;p=3D%lX,  p=3D%lX,  *p=3D%d, \n n=3D%d,  =
&amp;n=3D%lX.",&amp;p,p,*p,n,&amp;n);
}=20
</PRE>
    <LI>fare anche il watch delle espressioni &amp;p, p, *p, n, &amp;n =
ed=20
    eseguire con <TT><U>D</U>ebug|<U>S</U>tep over [F8] </TT>,=20
    <LI>aggiungere nel watch anche le espressioni *&amp;p, &amp;*p, =
*&amp;n ed=20
    eseguire con <TT><U>D</U>ebug|<U>S</U>tep over [F8] </TT>,=20
  </LI></OL><BR>&nbsp;=20
  <OL>
    <LI>Analizzare, compilare ed eseguire il seguente programma che fa =
uso di=20
    puntatori come argomenti di una funzione che realizza lo scambio tra =
due=20
    variabili: <PRE style=3D"BACKGROUND: silver">#include =
&lt;stdio.h&gt;


void  scambio(int *x, int *y  ) {
    int temp;
    temp =3D *x; *x =3D *y; *y =3Dtemp;
}


main() {
  int a,b;
  printf("a =3D "); scanf("%d",&amp;a);
  printf("b =3D "); scanf("%d",&amp;b);
  scambio(&amp;a,&amp;b);
  printf("\n  a =3D %d,   b =3D %d",a,b);
}
</PRE></LI></OL></OL><BR>&nbsp; <BR>&nbsp;=20
<H3 style=3D"BACKGROUND: teal; COLOR: white"><A =
name=3Dparte2></A>Aritmetica dei=20
puntatori </H3><BR>&nbsp;=20
<OL>
  <OL>
    <LI>Redigere e compilare un programma con le seguenti istruzioni: =
<PRE style=3D"BACKGROUND: silver">  int n;
  int *p;
  n=3D100;
  p=3D&amp;n;
  n=3D200;
  (*p)++;
  p++;
  p=3D&amp;n;
</PRE>
    <LI>fare il watch delle espressioni &amp;n, n, &amp;p, p, *p ed =
eseguire con=20
    <TT><U>D</U>ebug|<U>S</U>tep over [F8] </TT>, </LI></OL><BR>&nbsp;=20
  <OL>
    <LI>Analizzare, compilare ed eseguire il seguente programma per =
vedere come=20
    l'aritmetica dei puntatori dipenda dal tipo della variabile puntata. =
<PRE style=3D"BACKGROUND: silver">
#include &lt;stdio.h&gt;

main(){
// viene assegnato un indirizzo, in esadecimale, alla variabile =
puntatore:
	char *charp =3D (char *) 0x0111;   =20
	int *intp =3D (int *) 0x0222;
	printf("charp: %lX,   intp: %lX\n",charp, intp);
//le variabili puntatore sono incrementate di 1:
	printf("charp: %lX,   intp: %lX\n",charp+1, intp+1);
}
</PRE>
    <LI>fare il watch di <TT>charp</TT> e <TT>intp</TT>=20
    <LI>modificare il programma cambiando i tipi di variabile puntata in =
modo da=20
    ritrovare quanto spazio di memoria =E8 riservato ad altri tipi di =
dato=20
    semplice. </LI></OL><BR>&nbsp;=20
  <OL>
    <LI>Analizzare, compilare ed eseguire il seguente programma per il =
confronto=20
    tra puntatori <PRE style=3D"BACKGROUND: silver">#include =
&lt;stdio.h&gt;

main() {
  int *p, *q;
  int m,n;
  printf("*p =3D ");
  scanf("%d",&amp;m);
  p=3D&amp;m;
  printf("*q =3D ");
  scanf("%d",&amp;n);
  q=3D&amp;n;
  printf("\n*p=3D%d   p=3D%lX  &amp;p=3D%lX,\n  *q=3D%d    q=3D%lX   =
&amp;q=3D%lX\n\n",*p,p,&amp;p,*q,q,&amp;q);
  if(p !=3D q){
	 if (*p=3D=3D*q)
		*p=3D*q+1;
	 else
		q=3Dp;
	 printf("*p=3D%d   p=3D%lX  &amp;p=3D%lX,\n  *q=3D%d    q=3D%lX   =
&amp;q=3D%lX\n\n",*p,p,&amp;p,*q,q,&amp;q);
  }
}
</PRE></LI></OL></OL><BR>&nbsp; <BR>&nbsp;=20
<H3 style=3D"BACKGROUND: teal; COLOR: white"><A name=3Dparte3></A>Array =
e=20
puntatori</H3>
<OL>
  <LI>La stretta parentela tra array e puntatori emerge analizzando il =
programma=20
  seguente <PRE style=3D"BACKGROUND: silver">
#include &lt;stdio.h&gt;

void main(){
	int s[5];
	int *p;=09
	p=3Ds;
	for (int i=3D0; i&lt;5; i++){
		*(p+i)=3Di;
	}
	for (int i=3D0; i&lt;=3D5; i++){
		printf("%d ",s[i]);
	}
	printf("\n");
	for (int i=3D0; i&lt;5; i++){
		s[i]=3Di+5;
	}
	for (int i=3D0; i&lt;5; i++){
		printf("%d ",p[i]);
	}
	printf("\n");
	for (int i=3D0; i&lt;5; i++){
		*(p++) +=3D 5;
	}
	for (int i=3D0; i&lt;5; i++){
		printf("%d ",s[i]);
	}
	p=3Ds;
	printf("\n");
	for ( ; p&lt;&amp;s[4]+2; p++){
		printf("%d ",*p);
	}

}
</PRE>Occore quindi fare attenzione nell'uso di vettori, puntatori e =
anche=20
  stringhe: C non fa nessun controllo sulle dimensioni. Col valore =
sbagliato di=20
  un indice, oltre la dimensione riservata nella dichiarazione, vengono =
sporcate=20
  aree contigue in memoria.=20
  <P>Al contrario di un array o di una matrice che occupa in memoria lo =
spazio=20
  necessario per tutti gli elementi, un puntatore occupa solo lo spazio =
atto a=20
  contenere l'indirizzo del primo elemento. </P>
  <LI>I puntatori sono necessari per scrivere moduli che abbiano per =
argomento=20
  array. Utilizzare la seguente function che determina la lunghezza di =
una=20
  stringa per scrivere un'altra function che restituisca l'ultimo =
elemento di=20
  una stringa <PRE>int strLen(char *s){
	int lungh=3D0;
	while (*s++)
		lungh ++;
	return lungh;
}
</PRE></LI></OL><BR>&nbsp; <BR>&nbsp; <B>NOTA: Al termine di ogni =
sessione di=20
lavoro fare una copia del floppy e poi spegnere il computer con <FONT=20
face=3D"Courier New" size=3D2>Start/Chiudi sessione/Arresta il =
sistema</FONT>. </B>
<HR style=3D"COLOR: blue">

<CENTER><FONT face=3DArial size=3D1>pagine di <A=20
href=3D"mailto:roberto_ricci@tin.it"><I>Roberto Ricci </I></A>L.S. =
"<I>A.=20
Righi</I>", Bologna. Ultima revisione
<SCRIPT language=3DJavascript>
document.write(document.lastModified)
</SCRIPT>
 </FONT></CENTER>
<HR style=3D"COLOR: blue">

<SCRIPT language=3DJavaScript>=0A=
<!--=0A=
var SymRealOnLoad;=0A=
var SymRealOnUnload;=0A=
=0A=
function SymOnUnload()=0A=
{=0A=
  window.open =3D SymWinOpen;=0A=
  if(SymRealOnUnload !=3D null)=0A=
     SymRealOnUnload();=0A=
}=0A=
=0A=
function SymOnLoad()=0A=
{=0A=
  if(SymRealOnLoad !=3D null)=0A=
     SymRealOnLoad();=0A=
  window.open =3D SymRealWinOpen;=0A=
  SymRealOnUnload =3D window.onunload;=0A=
  window.onunload =3D SymOnUnload;=0A=
}=0A=
=0A=
SymRealOnLoad =3D window.onload;=0A=
window.onload =3D SymOnLoad;=0A=
=0A=
//-->=0A=
</SCRIPT>
</BODY></HTML>

------=_NextPart_000_0055_01C45807.8C850640
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://xoomer.virgilio.it/roberto-ricci/stilind.css

BODY {
	FONT-SIZE: 10pt; BACKGROUND: url(sfondo.jpeg) fixed; COLOR: #000000; =
FONT-FAMILY: Verdana,Arial,Helvetica
}
TD {
	FONT-SIZE: 10pt; COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica
}
P {
	FONT-SIZE: 10pt; COLOR: #000000; FONT-FAMILY: Verdana,Arial,Helvetica
}
A {
	COLOR: #000080; TEXT-DECORATION: none
}
A:hover {
	FONT-WEIGHT: bold; COLOR: #008080
}
H1 {
	FONT-SIZE: 24pt; COLOR: #6464ff; FONT-FAMILY: Verdana,Arial,Helvetica
}
H2 {
	FONT-SIZE: 14pt; COLOR: #6464ff; FONT-FAMILY: Verdana,Arial,Helvetica
}
H3 {
	FONT-SIZE: 12pt; COLOR: #6464ff; FONT-FAMILY: Verdana,Arial,Helvetica
}
LI {
	COLOR: #336699; FONT-FAMILY: Verdana,Arial,Helvetica
}
.tipo {
	FONT-WEIGHT: bold; COLOR: #6464ff
}
.sotto {
	FONT-SIZE: 80%; COLOR: #000000
}
.aforismi {
	FONT-WEIGHT: bold; COLOR: #000000; FONT-STYLE: italic
}
.firma {
	FONT-WEIGHT: bold; FONT-SIZE: 80%; FONT-STYLE: italic
}

------=_NextPart_000_0055_01C45807.8C850640--
